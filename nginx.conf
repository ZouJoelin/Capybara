server {
    listen 80;
    listen [::]:80; ## 监听 IPv6 的 80 端口
    server_name localhost;


    # limit
    keepalive_timeout 5;

    # since the traffic is already used when it get past the Intranet-penetration to Nginx here,
    # it is vain to constrain a reasonable threshold. So it do no harm to set it higher.
    client_max_body_size 128m;


    # log
    # access_log /home/server/Capybara/log/nginx.access.log combined;
    error_log /home/server/Capybara/log/nginx.error.log notice;


    # set proxy forwarding
    # `real_ip_header`: set $remote_addr with X-Natapp-Ip(if exist)
    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Natapp-IP;
    real_ip_recursive on;

    # proxy_set_header X-Real-Ip $remote_addr;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # backup arguments
    # $args ：这个变量等于请求行中的参数，同$query_string
    # $content_length ： 请求头中的Content-length字段。
    # $content_type ： 请求头中的Content-Type字段。
    # $document_root ： 当前请求在root指令中指定的值。
    # $host ： 请求主机头字段，否则为服务器名称。
    # $http_user_agent ： 客户端agent信息
    # $http_cookie ： 客户端cookie信息
    # $limit_rate ： 这个变量可以限制连接速率。
    # $request_method ： 客户端请求的动作，通常为GET或POST。
    # $remote_addr ： 客户端的IP地址。
    # $remote_port ： 客户端的端口。
    # $remote_user ： 已经经过Auth Basic Module验证的用户名。
    # $request_filename ： 当前请求的文件路径，由root或alias指令与URI请求生成。
    # $scheme ： HTTP方法（如http，https）。
    # $server_protocol ： 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。
    # $server_addr ： 服务器地址，在完成一次系统调用后可以确定这个值。
    # $server_name ： 服务器名称。
    # $server_port ： 请求到达服务器的端口号。
    # $request_uri ： 包含请求参数的原始URI，不包含主机名，如：”/foo/bar.php?arg=baz”。
    # $uri ： 不带请求参数的当前URI，$uri不包含主机名，如”/foo/bar.html”。
    # $document_uri ： 与$uri相同。

    # config transmit
    location / {
        proxy_pass http://127.0.0.1:8000;
    }

    location /static {
        autoindex on;
        alias /home/server/Capybara/static;
    }

    # location ~ \.(js|css|images|png|gif|jpg|jpeg|ioc|txt)$ {
    #     root /home/server/Capybara/static/;
    # }

    location ~ \.(txt)$ {
        root /home/server/Capybara;
    }


    # error page
    proxy_intercept_errors on;

    error_page 502 503 504 /50x.html;
    error_page 404 /404.html;

    location = /50x.html {
        root /home/server/Capybara/templates;
        internal;
    }
    location = /404.html {
        root /home/server/Capybara/templates;
        internal;
    }
}